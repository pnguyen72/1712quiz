{
  "09_01": {
    "question": "A sample access control requirement would be what?",
    "choices": {
      "A": { "choice": "Customer service reps can modify customer files but not delete them", "correct": true },
      "B": { "choice": "Data will be encrypted for secure ordering" },
      "C": { "choice": "All uploaded files will be checked for viruses" },
      "D": { "choice": "The system will cost $38,900 per minute of downtime in lost revenues" }
    },
    "multiSelect": true,
    "explanation": "<i>\"Access control requirements [are] limitations on who can access what data.\"</i> - <b>module 9, slide 41</b>"
  },
  "09_02": {
    "question": "Server virtualization involves what?",
    "choices": {
      "A": { "choice": "Partitioning a physical server into smaller virtual servers", "correct": true },
      "B": { "choice": "Stacking blade servers" },
      "C": { "choice": "Using a laptop as a server" }
    },
    "multiSelect": true,
    "explanation": "<i>\"[Server virtualization is] partitioning a physical server into smaller virtual servers that are independent of each other, run their own OS and can be rebooted independently.\"</i> - <b>module 9, slide 28</b>"
  },
  "09_03": {
    "question": "Thick clients contain what?",
    "choices": {
      "A": { "choice": "Enormous storage abilities" },
      "B": { "choice": "Almost all or most of the application logic", "correct": true },
      "C": { "choice": "Almost none or less than half of the application logic" },
      "D": { "choice": "Almost all of the data logic" }
    },
    "multiSelect": true,
    "explanation": "Thick clients are defined as clients that contain most, or all, of the application logic (as opposed to thin clients, which contain only a small part of the application logic)."
  },
  "09_04": {
    "question": "The scalability associated with Client-Server systems is:",
    "choices": {
      "A": { "choice": "Low" },
      "B": { "choice": "Low-Medium" },
      "C": { "choice": "High-medium" },
      "D": { "choice": "High", "correct": true },
      "E": { "choice": "Very High" }
    },
    "explanation": "We know that client-server architecture has high scalability, but it's not clear why it's \"high\" rather than \"very high\"."
  },
  "09_05": {
    "question": "It is not uncommon for the cost of a power disruption to be hundreds or thousands of times the cost of failed components.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    },
    "explanation": "<i>\"The cost of disruptions to a companyâ€™s primary website or to the LANs and backbones that support telephone sales operations often measures in millions of dollars. Amazon.com, for example, had average in 2017 revenues of more than $6.9 million per hour, so if its website was unavailable for an hour or two, it would cost them millions of dollars in lost revenue if customers took their business elsewhere. Companies that do less e-business or telephone sales have lower costs, but recent surveys suggest that losses of $100,000 to $200,000 per hour are not uncommon for major customer-facing information systems.\"</i><br><b>(p. 254)</b>"
  },
  "09_06": {
    "question": "Expected business changes to which the system should be able to adapt.",
    "choices": {
      "A": { "choice": "System Integration Requirements" },
      "B": { "choice": "Technical Environment Requirements" },
      "C": { "choice": "Portability Requirements" },
      "D": { "choice": "Scalability Requirements" },
      "E": { "choice": "Maintainability Requirements", "correct": true }
    },
    "explanation": "figure 7-5, p. 232; also module 9, slide 33"
  },
  "09_07": {
    "question": "There are three advantages associated with client-server architecture.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Actually, there are four!<br>- Scalable (also meaning it's flexible)<br>- Supportive of many different client and server types (using middleware)<br>- Presentation, application, and data storage/access logic can be designed independently<br>- Easily replaceable (if a server fails, it can be swapped easily and won't affect the whole system)"
  },
  "09_08": {
    "question": "Project teams often _________ the ________ associated with creating secure, efficient client-server applications.",
    "choices": {
      "A": { "choice": "Overestimate; Difficulty" },
      "B": { "choice": "Overestimate; Simplicity" },
      "C": { "choice": "Underestimate; Difficulty", "correct": true },
      "D": { "choice": "Underestimate; Simplicity" }
    },
    "multiSelect": true
  },
  "09_09": {
    "question": "System Integration Requirements can be defined as the extent to which the system will operate with other systems.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_10": {
    "question": "Client-server scalability is less than server-based scalability.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    }
  },
  "09_11": {
    "question": "Special hardware, software, and network requirements imposed by business requirements.",
    "choices": {
      "A": { "choice": "System Integration Requirements" },
      "B": { "choice": "Technical Environment Requirements", "correct": true },
      "C": { "choice": "Portability Requirements" },
      "D": { "choice": "Scalability Requirements" },
      "E": { "choice": "Maintainability Requirements" }
    },
    "explanation": "It's different from Portability Requirement in that TER is what environments the system <i>currently</i> needs to operate in; while PR is what environments the system <i>may</i> need to operate in in the future.<br><br><b>(p. 231)</b>"
  },
  "09_12": {
    "question": "The major architectural components of any system are _____",
    "choices": {
      "A": { "choice": "IT Department" },
      "B": { "choice": "Hardware", "correct": true },
      "C": { "choice": "Software", "correct": true }
    },
    "multiSelect": true
  },
  "09_13": {
    "question": "DES is an example of what?",
    "choices": {
      "A": { "choice": "Asymmetric Encryption Algorithm" },
      "B": { "choice": "Symmetric Encryption Algorithm", "correct": true },
      "C": { "choice": "Bi-Adjusted Encryption Algorithm" },
      "D": { "choice": "Dynamic Encryption System" },
      "E": { "choice": "Alternative Systems Security Algorithms" }
    },
    "explanation": "DES stands for Data Encryption Standard.<br>We only learned 2 types of encryption algorithm, symmetric and asymmetric. The only asymmetric encryption algorithm we learned is <b>public key encryption</b>. So everything else is symmetric.<br>See <b>p. 237</b>."
  },
  "09_14": {
    "question": "Server-based architecture is <u>not</u> more secure than client-based architecture.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Client-based = fat client"
  },
  "09_15": {
    "question": "An example of a cultural requirement would be offering the system in English and Spanish.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    },
    "explanation": "Language requirements are part of cultural requirements - more specifically, they're called multilingual requirements.<br><br>See <b>figure 7-8, p. 239</b>"
  },
  "09_16": {
    "question": "Technical Environment Requirements can be defined as special hardware, software, and network requirements imposed by business requirements",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_17": {
    "question": "An n-tiered architecture is distinguished by:",
    "choices": {
      "A": { "choice": "The number of drives installed" },
      "B": { "choice": "The number of logics on the local server" },
      "C": { "choice": "The number of terminals on the network" },
      "D": { "choice": "The number of specialized server computers", "correct": true }
    },
    "multiSelect": true
  },
  "09_18": {
    "question": "An example of an asymmetric encryption algorithm is public key encryption.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_19": {
    "question": "Designing an architecture can be what?",
    "choices": {
      "A": { "choice": "Tedious and therefore younger members of the team are usually urged to take the lead." },
      "B": { "choice": "Easy and therefore more experienced members of the department take the lead." },
      "C": { "choice": "Easy and therefore outside consultants are often sourced to do the task." },
      "D": { "choice": "Easy and therefore experienced internal members are sourced to the task." },
      "E": { "choice": "Difficult and therefore, many organizations use the skills of experienced, expert system architects (consultants or employees) who specialize in the task.", "correct": true }
    }
  },
  "09_20": {
    "question": "The term in the computing domain which refers to the creation of devices or storage with the use of software and not hardware is what?",
    "choices": {
      "A": { "choice": "Encryption" },
      "B": { "choice": "Virtualization", "correct": true },
      "C": { "choice": "Dynamic Creation" },
      "D": { "choice": "Alternative Devices" }
    },
    "multiSelect": true
  },
  "09_21": {
    "question": "An example of making an unstated norm explicit would be to make a field modifiable by a manager to represent the local format.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Making a fields modifiable is <u>customizable requirement</u>.<br><br>Making unstated norms explicit is, for example, explicitly stating your date format and measurement unit."
  },
  "09_22": {
    "question": "The architectural components of any system are the network and the hardware.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Software too :)"
  },
  "09_23": {
    "question": "Maintainability Requirements can be defined as expected business changes to which the system should be able to adapt.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_24": {
    "question": "Data storage, Data Access Logic, Application Logic and Presentation Logic are the four basic functions of software systems.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_25": {
    "question": "Client-based architecture is complex and there is minimal chance of network circuits being overloaded due to growing network applications.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Client-based = fat client"
  },
  "09_26": {
    "question": "Portability Requirements can be defined as the extent to which the system will need to operate in other environments.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    },
    "explanation": "It's different from Technical Environment Requirements in that PR is what environments the system <i>may</i> need to operate in in the future, while TER is what environments the system <i>currently</i> needs to operate in. <b>(p. 231)</b>"
  },
  "09_27": {
    "question": "The design phase is the time to select the specific software that will operate the hardware.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_28": {
    "question": "The extent to which the system will operate with other systems.",
    "choices": {
      "A": { "choice": "System Integration Requirements", "correct": true },
      "B": { "choice": "Technical Environment Requirements" },
      "C": { "choice": "Portability Requirements" },
      "D": { "choice": "Scalability Requirements" },
      "E": { "choice": "Maintainability Requirements" }
    },
    "explanation": "<i>\"System integration requirements [are] the extent to which the system will operate with other systems.\"</i> <b>(module 9, slide 33)</b>"
  },
  "09_29": {
    "question": "The cost of development associated with Client-Based systems is:",
    "choices": {
      "A": { "choice": "Low", "correct": true },
      "B": { "choice": "Low-Medium" },
      "C": { "choice": "High-medium" },
      "D": { "choice": "High" },
      "E": { "choice": "Very High" }
    }
  },
  "09_30": {
    "question": "Maintainability Requirements can be defined as the extent to which the system will need to operate in other environments.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "Maintainability Requirements refer to how easily the system can be updated, fixed, or enhanced, not how it operates in different environments."
  },
  "09_31": {
    "question": "The objective of architecture design is to determine how the software components of the information system will be assigned to the hardware devices of the system.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_32": {
    "question": "Mobile application architectures are where the:",
    "choices": {
      "A": { "choice": "Client device is responsible for presentation logic", "correct": true },
      "B": { "choice": "Client device is responsible for business logic", "correct": true },
      "C": { "choice": "The server is responsible for data access logic", "correct": true },
      "D": { "choice": "The server stores the data", "correct": true }
    },
    "multiSelect": true
  },
  "09_33": {
    "question": "What is/are the disadvantage(s) associated with n-tiered architecture?",
    "choices": {
      "A": { "choice": "They put great load on the network", "correct": true },
      "B": { "choice": "It is more difficult to program and test software", "correct": true },
      "C": { "choice": "The clients capture keystrokes" },
      "D": { "choice": "They are always slower" },
      "E": { "choice": "They are the very first architecture system" }
    },
    "multiSelect": true,
    "explanation": "More tiers in the architecture means more network communications overall, meaning it needs a higher-capacity network.<br><br>Because there's a lot more tiers, the code also becomes a lot harder to test. <b>(module 9, slide 18)</b>"
  },
  "09_34": {
    "question": "The objective of architecture design is to determine what?",
    "choices": {
      "A": { "choice": "How aesthetically pleasing the server system will be" },
      "B": { "choice": "What parts of the application software will be assigned to what hardware", "correct": true },
      "C": { "choice": "How the computers will be arranged to provide ample storage" },
      "D": { "choice": "Where the mainframe will be situated" }
    },
    "multiSelect": true
  },
  "09_35": {
    "question": "An example of a multilingual requirement is what?",
    "choices": {
      "A": { "choice": "The system will operate in English, French and Spanish", "correct": true },
      "B": { "choice": "Country managers can define custom fields" },
      "C": { "choice": "All date fields will be presented in a uniform format" },
      "D": { "choice": "Personal information about English customers cannot be sent to Chinese systems" },
      "E": { "choice": "Country managers are able to change telephone number formats" }
    }
  },
  "09_36": {
    "question": "There are four advantages associated with client-server architecture.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_37": {
    "question": "An example of a capacity requirement would be:",
    "choices": {
      "A": { "choice": "Transmissions require 300K of data", "correct": true },
      "B": { "choice": "The systems uptime will be 99%" },
      "C": { "choice": "Response time must be &lt;2.8 seconds for any transactions" },
      "D": { "choice": "The inventory database will be updated in real time" }
    },
    "multiSelect": true,
    "explanation": "Response time and being updated in realtime are speed requirement. Uptime is availability requirement."
  },
  "09_38": {
    "question": "Client-server scalability is greater than server-based scalability.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_39": {
    "question": "An ATM dialing a network provides the IT department with a quick cash withdrawal for emergency purposes.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "I think ATM in this context refers to ATM circuits, a form of network connection, unrelated to the money machines. <b>(p. 224)</b>"
  },
  "09_40": {
    "question": "System Integration Requirements can be defined as the extent to which the system will need to operate in other environments.",
    "choices": {
      "A": { "choice": "True" },
      "B": { "choice": "False", "correct": true }
    },
    "explanation": "System Integration Requirements is the extent to which the system will need to operate <b>with other systems</b> (e.g. the system will work with existing database).<br><br>The extent to which the system will need to operate in other environments is <b>Portability Requirements</b> (e.g. system may need to operate on mobile)"
  },
  "09_41": {
    "question": "Operational requirements of a system include all of the following, except:",
    "choices": {
      "A": { "choice": "System Integration Requirements" },
      "B": { "choice": "Technical Environment Requirements" },
      "C": { "choice": "Portability Requirements" },
      "D": { "choice": "Scalability Requirements", "correct": true },
      "E": { "choice": "Maintainability Requirements" }
    }
  },
  "09_42": {
    "question": "Which of the following is an advantage of client-server architectures?",
    "choices": {
      "A": { "choice": "They are scalable", "correct": true },
      "B": { "choice": "They can support different types of systems", "correct": true },
      "C": { "choice": "It is easy to separate different logic functions", "correct": true },
      "D": { "choice": "Reliability", "correct": true }
    },
    "multiSelect": true,
    "explanation": "Benefits of client-server architecture:<br>- Scalable<br>- Can support many different types of clients and servers<br>- Can design each logic function independently<br>- If a server fails, only the applications requiring that server will fail<br><b>(module 9, slide 11)</b>"
  },
  "09_43": {
    "question": "The primary hardware components of a system consist of:",
    "choices": {
      "A": { "choice": "Client computers", "correct": true },
      "B": { "choice": "Servers", "correct": true },
      "C": { "choice": "Network", "correct": true }
    },
    "multiSelect": true
  },
  "09_44": {
    "question": "Form(s) of network connection(s) in a system include:",
    "choices": {
      "A": { "choice": "ATM", "correct": true },
      "B": { "choice": "T2" },
      "C": { "choice": "DSL", "correct": true }
    },
    "multiSelect": true,
    "explanation": "<i>\"The network that connects the computers can vary [...] such as cable modem, DSL, or T1 circuits, to high-Â­speed always-Â­on Ethernet, T3, or ATM circuits.\"</i> <b>(p. 224)</b><br><br>I don't think we ever learned what T2 is."
  },
  "09_45": {
    "question": "An example of making an unstated norm explicit would be to make an input field explicitly defined, such as a date will use month-day-year format.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_46": {
    "question": "Software systems can be divided into how many basic functions?",
    "choices": {
      "A": { "choice": "1" },
      "B": { "choice": "2" },
      "C": { "choice": "3" },
      "D": { "choice": "4", "correct": true },
      "E": { "choice": "5" }
    },
    "explanation": "1. Data storage<br>2. Data access logic<br>3. Application logic<br>4. Presentation logic<br><b>(p. 223-224)</b>"
  },
  "09_47": {
    "question": "Server-based architecture is more secure than client-based architecture.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    },
    "explanation": "Server-based architecture has the server do all four application functions. Client-based architecture has the client do the presentation logic. As the client in server-based architecture has less control over the logic of the system, server-based architecture is more secure."
  },
  "09_48": {
    "question": "The extent to which the system will need to operate in other environments.",
    "choices": {
      "A": { "choice": "System Integration Requirements" },
      "B": { "choice": "Technical Environment Requirements" },
      "C": { "choice": "Portability Requirements", "correct": true },
      "D": { "choice": "Scalability Requirements" },
      "E": { "choice": "Maintainability Requirements" }
    }
  },
  "09_49": {
    "question": "How many advantages are client-server based architectures known for?",
    "choices": {
      "A": { "choice": "2" },
      "B": { "choice": "3" },
      "C": { "choice": "4", "correct": true },
      "D": { "choice": "5" },
      "E": { "choice": "7" }
    },
    "explanation": "1. Scalable: easy to increase/decrease storage or processing power as necessary.<br>2. Can support many different types of clients and servers (e.g. a Windows client can access a server running on Linux)<br>3. Easy to separate different logic fuctions (presentation logic, application logic, data access logic).<br>4. Reliable: if a server fails, the failed server can be replaced.<br><b>(p. 224-225)</b>"
  },
  "09_50": {
    "question": "There are _____ primary hardware components of a system.",
    "choices": {
      "A": { "choice": "1" },
      "B": { "choice": "2" },
      "C": { "choice": "3", "correct": true },
      "D": { "choice": "4" },
      "E": { "choice": "5" }
    },
    "explanation": "Client computers, servers, and the network. <b>(p. 224)</b>"
  },
  "09_51": {
    "question": "Client-server architecture holds the client responsible for_____ and server is only responsible for _____.",
    "choices": {
      "A": { "choice": "Application Logic; Presentation Logic" },
      "B": { "choice": "Presentation Logic; Data Access Logic and Data Storage", "correct": true },
      "C": { "choice": "Data Access Logic and Presentation Logic; Data Storage" },
      "D": { "choice": "Application Logic; Data Storage" },
      "E": { "choice": "Data Storage; Application Logic" }
    }
  },
  "09_52": {
    "question": "Client computers, Servers, and Networks are the three primary hardware components of a system.",
    "choices": {
      "A": { "choice": "True", "correct": true },
      "B": { "choice": "False" }
    }
  },
  "09_53": {
    "question": "Server-based architecture is _________",
    "choices": {
      "A": { "choice": "When the clients capture keystrokes", "correct": true },
      "B": { "choice": "The very first architecture system", "correct": true },
      "C": { "choice": "Outdated and never used" }
    },
    "multiSelect": true,
    "explanation": "Server-based architecture:<br>- User sits in front of a â€œdumb terminal\", all it does is get user input, send to server to process, and send back the output. (This is what the question means by \"capture keystroke\".)<br>- It's the first computing architecture because back then companies can't afford to give every employee a computer. So each gets a \"dumb terminal\", all connected to just one computer.<br>- While less common today, theyâ€™re still important, especially where systems process a huge amount of transactions or require a huge amount of security."
  }
}
